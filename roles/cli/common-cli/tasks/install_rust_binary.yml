# Install Rust Binaries from Github
# Faced issues with `cargo install` route which was explored to avoid this approach


- name: COMMON-CLI|RUST_BINARY - Install {{ rust_binary_name }} from {{ github_url }} for Debian
  when: ansible_os_family in ["Debian"]
  # debug:
  #   msg: "Variables: {{ rust_binary_name }} | {{ github_url }}"

  block:
    - name: COMMON-CLI|RUST_BINARY - Create temporary download directory
      tempfile:
        state: directory
        suffix: ".binary_download_dir"
      register: binary_download_dir

    - name: COMMON-CLI|RUST_BINARY - Getting latest version from Github API
      shell: >
        curl -s "https://api.github.com/repos/{{ github_repo }}/releases/latest"
        | jq -r '.tag_name'
      register: output
    
    - name: COMMON-CLI|RUST_BINARY - Download noti {{ output.stdout }} to {{ binary_download_dir.path }}
      ansible.builtin.unarchive:
        src: "https://github.com/{{ github_repo }}/releases/download/{{ output.stdout }}/noti{{ output.stdout }}.{{ ansible_system | lower }}-{{ machine_map[ansible_machine] }}.tar.gz"
        dest: "{{ binary_download_dir.path }}/"
        remote_src: yes

    - name: COMMON-CLI|RUST_BINARY - Install to /usr/local/bin/
      command: install noti /usr/local/bin/
      args:
        chdir: "{{ binary_download_dir.path }}"
      become: "{{ should_be_root }}"

  # always:
  #   - name: COMMON-CLI|RUST_BINARY - Delete binary download directory - {{ binary_download_dir.path }}
  #     file:
  #       path: "{{ binary_download_dir.path }}"
  #       state: absent
  #     changed_when: no