# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
HIST_STAMPS="%F_%T"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    zsh-autosuggestions
    zsh-syntax-highlighting
    docker
    docker-compose
    virtualenv
    golang
    asdf
    taskwarrior
    timewarrior
    pipenv
    ansible
    command-not-found
    brew
    history
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim

# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"


###############################################################################################
# >>> ##################################### ALIAS

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias venv='python3 -m venv ./venv && source ./venv/bin/activate && pip install --upgrade pip setuptools > /dev/null'
alias va='source ./venv/bin/activate'

# >>> Common Python Virtual Environment

if [[ -d "/usr/local/venv/" ]]
then
    alias awslocal=/usr/local/venv/bin/awslocal
    alias yq=/usr/local/venv/bin/yq
    alias xq=/usr/local/venv/bin/xq
fi

# <<< Common Python Virtual Environment

# Brew

if command -v brew 1>/dev/null 2>&1; then
	alias brewup='brew update; brew upgrade; brew cleanup; brew doctor'
fi

if command -v apt 1>/dev/null 2>&1; then
	alias aptup='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y'
fi

if command -v bat 1>/dev/null 2>&1; then
    alias cat='bat'
fi

# ls
alias lt='ls -lahtFr'
#alias ltr=' -r'

# docker
alias dka='docker ps -aq | xargs -I{} docker kill {}'		# kill all running docker containers
alias dra='docker ps -aq | xargs -I{} docker rm {}'			# remove all docker containers
alias dsp='docker system prune'

alias tailf='tail -f'
alias tt='timetrap'
# <<< ##################################### ALIAS
###############################################################################################


###############################################################################################
# >>> ##################################### FUNCTIONS 

# Youtube Download to MP3 :)
if command -v youtube-dl 1>/dev/null 2>&1; then
	function yda() {
		youtube-dl -cix --audio-format mp3 "$@"
	}
fi

# Helper Functions
function addcmd() { # Add a command to ~/.zshrc and use it
	vim + ~/.zshrc
	source ~/.zshrc
}

function ushell() { # update shell
	source ~/.zshrc
}

function cproj() {
	# create dated project directory
	project_name="$@"
	# echo "Project:$project_name"
	new_project_dir="$(date +%F)-${project_name}"
	mkdir -v "$new_project_dir"

	readme_file="${new_project_dir}/${new_project_dir}-readme.md"
	touch "$readme_file"
	ls -d ${new_project_dir}/*

	# capitalize each word + replace all '-' with ' ' in $project_name
	echo -e "# $(date +%F): ${(C)project_name//-/ } Project Overview" > "${readme_file}"
}

function mydate() { date +"%Y-%m-%d %H:%M:%S %Z"; } # Date in my format
function today() { date +"%A, %B %d, %Y"; } # Date in secondary format
function note() { echo `date +"%Y-%m-%d %H:%M:%S  "`"$*" >> ~/notes; } # Add a note to my file
function notes() { vim + ~/notes; } # View/edit notes

# add - to 2 and changed head to tail to make it zsh compatible
function gotit() { history -2 | tail -n 1 | cut -c 8- >> ~/notes; }

function colors() {
	for i in {0..255}
	do
		print -Pn "%K{$i} %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%8)):#7}:+$'\n'}
	done
}

function cdot() {
	dir="${HOME}/.dotfiles"
	if [[ -d "${dir}" ]]
	then
		echo "Navigating to '${dir}'"
		cd "${dir}"
	else
		echo "ERROR: Directory '${dir}' doesn't exist!"
	fi
}

# copy to clipboard on linux
kernel_name="$(uname -s)"

if [ "${kernel_name}" = "Linux" ]
then
	function copy() {
		cat "$@" | xclip -i -selection clipboard
	}
fi

# >>> AWS COMPLETION - https://github.com/aws/aws-cli/issues/4656

if command -v aws 1>/dev/null 2>&1; then

    function awsm() { aws --profile main "$@"; }

	if test -f "/usr/local/bin/aws_completer"; then
		complete -C '/usr/local/bin/aws_completer' aws awsm
	fi
fi
# <<< AWS COMPLETION

function update_p10k() {
	git -C $ZSH_CUSTOM/themes/powerlevel10k pull
}

function get_params () {
  DEFAULT_ENV=dev
  ENV=${2-$DEFAULT_ENV}
  if [ -z "$1" ]
  then
    echo "No build yml supplied"
    return 1
  fi
  echo 'using file' $1
  echo "using environtment ${ENV}"
  cat $1 |awk '/--name/{print $7}' | sed -e 's/\${[eE][nN][vV]}/'"${ENV}"'/g' | xargs -n10 aws ssm get-parameters --with-decryption --query "Parameters[*].{Name:Name,Value:Value}" --names
}

# <<< ##################################### FUNCTIONS 
###############################################################################################

DEFAULT_USER=$(whoami)


###############################################################################################
# >>> ##################################### PATH MODIFICATIONS


export PATH=~/bin:$PATH
export PATH=~/.bin:$PATH

# >>> CDPATH - https://jcode.me/cdpath-with-zsh/

typeset -U path cdpath fpath

setopt auto_cd
cdpath=($HOME/work $HOME/work/github)

zstyle ':completion:*' group-name ''
zstyle ':completion:*:descriptions' format %d
zstyle ':completion:*:descriptions' format %B%d%b 				# bold
zstyle ':completion:*:descriptions' format %S%d%s        # invert/standout
# zstyle ':completion:*:descriptions' format %U%d%u        # underline
zstyle ':completion:*:descriptions' format %F{green}%d%f # green foreground
# zstyle ':completion:*:descriptions' format %K{blue}%d%k  # blue background
zstyle ':completion:*:complete:(cd|pushd):*' tag-order \
'local-directories named-directories path-directories'

# <<< CDPATH

# Control output of less
if command -v less 1>/dev/null 2>&1; then
	alias mroe=less more=less
	export PAGER=less
	export LESS=FRdiX
	export LESSCHARSET=utf-8
fi

if command -v jump 1>/dev/null 2>&1; then
    eval "$(jump shell)"
fi


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# >>> conda initialize >>>
if [ -f "$HOME/.asdf/installs/python/miniconda3-4.7.12/etc/profile.d/conda.sh" ]; then
	. "$HOME/.asdf/installs/python/miniconda3-4.7.12/etc/profile.d/conda.sh"
else
	export PATH="$HOME/.asdf/installs/python/miniconda3-4.7.12/bin:$PATH"
fi
# <<< conda initialize <<<

# Disabled shared history across terminal tabs
unsetopt SHARE_HISTORY
